# joint_limits.yaml allows the dynamics properties specified in the URDF to be overwritten or augmented as needed

# For beginners, we downscale velocity and acceleration limits.
# You can always specify higher scaling factors (<= 1.0) in your motion requests.  # Increase the values below to 1.0 to always move at maximum speed.
default_velocity_scaling_factor: 0.1
default_acceleration_scaling_factor: 0.1

# Specific joint properties can be changed with the keys [max_position, min_position, max_velocity, max_acceleration]
# Joint limits can be turned off with [has_velocity_limits, has_acceleration_limits]
joint_limits:
  base_to_network:
    has_velocity_limits: true
    max_velocity: 100
    has_acceleration_limits: false
    max_acceleration: 0
  baselink_to_base:
    has_velocity_limits: true
    max_velocity: 100
    has_acceleration_limits: false
    max_acceleration: 0
  network_to_robot1:
    has_velocity_limits: true
    max_velocity: 100
    has_acceleration_limits: false
    max_acceleration: 0
  network_to_robot2:
    has_velocity_limits: true
    max_velocity: 100
    has_acceleration_limits: false
    max_acceleration: 0
  network_to_robot3:
    has_velocity_limits: true
    max_velocity: 100
    has_acceleration_limits: false
    max_acceleration: 0
  network_to_robot4:
    has_velocity_limits: true
    max_velocity: 100
    has_acceleration_limits: false
    max_acceleration: 0
  robot1_to_network:
    has_velocity_limits: true
    max_velocity: 100
    has_acceleration_limits: false
    max_acceleration: 0
  robot2_to_network:
    has_velocity_limits: true
    max_velocity: 100
    has_acceleration_limits: false
    max_acceleration: 0
  robot3_to_network:
    has_velocity_limits: true
    max_velocity: 100
    has_acceleration_limits: false
    max_acceleration: 0
  robot4_to_network:
    has_velocity_limits: true
    max_velocity: 100
    has_acceleration_limits: false
    max_acceleration: 0